{"version":3,"file":"comparison.js","sourceRoot":"","sources":["../src/comparison.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash'\nimport * as moment from 'moment'\n\nexport class Comparison {\n  data: _.CollectionChain<Object>;\n  opts: ComparisonOpts;\n  report: Object;\n  _groups: _.ObjectChain<_.Dictionary<Object[]>>\n  _value: {};\n  _fields: Object[];\n\n  constructor (data: Object[], opts: ComparisonOpts) {\n    this.data = _.chain(data)\n    this.opts = Object.assign({}, opts)\n    this.report = {}\n    this._groups = this.data.groupBy(this.opts.groupBy)\n    this._fields = []\n    this._value = this.calculateValue()\n  }\n\n  groups () {\n    return this._groups.keys().sort().value()\n  }\n\n  value () {\n    return this._value\n  }\n\n  fields () {\n    return this._fields\n  }\n\n  calculateValue () {\n    const groupBy = (item) => {\n      const key = this.opts.valueBy(item)\n      const pos = _.findIndex(this._fields, (i) => _.isEqual(i, key))\n      const res = pos >= 0 ? pos : this._fields.push(key) - 1\n      return res\n    }\n\n    const res = this._groups\n      .mapValues(values => {\n        return _.chain(values).groupBy(groupBy).mapValues(val => val.reduce(this.opts.sumBy, {})).value()\n      })\n      .transform((result, value, key) => {\n        _.forEach(value, (item, k) => {\n          result[k] = result[k] || _.zipObject(this.groups(), _.map(this.groups(), () => this.opts.sumBy({}, {})))\n          result[k][key] = item\n        })\n      }, {})\n      .mapValues((values, key) => ({\n        values: Object.values(values),\n        field: this._fields[key]\n      }))\n      .values()\n      .value()\n\n    return res\n  }\n\n  total () {\n    return this._groups.mapValues(val => val.reduce(this.opts.sumBy, {})).value()\n  }\n\n  static timeseries (dateField: string, format: string = 'YYYY-MM') {\n    return (item) => moment(item[dateField]).format(format)\n  }\n}\n\nexport interface ComparisonOpts {\n  sumBy: any;\n  valueBy: any | string;\n  groupBy: Function;\n}\n"]}